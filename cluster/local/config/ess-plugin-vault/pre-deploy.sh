if ${KUBECTL} -n "${HELM_RELEASE_NAMESPACE}" get secret ess-server-certs
then
  echo "Secret ess-server-certs already exists!"
  return 0
fi

${KUBECTL} create namespace "${HELM_RELEASE_NAMESPACE}" --dry-run=client -o yaml | ${KUBECTL} apply -f -
echo_info "Generating certificate secret..."
cat <<EOF | ${KUBECTL} -n "${HELM_RELEASE_NAMESPACE}" apply -f -
apiVersion: v1
kind: Secret
metadata:
  name: ess-server-certs
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN1RENDQWFBQ0NRRGcvZlBRUEVRenJqQU5CZ2txaGtpRzl3MEJBUXNGQURBZE1Rc3dDUVlEVlFRR0V3SlYKVXpFT01Bd0dBMVVFQ0F3RlYyOXliR1F3SUJjTk1qTXdNekUwTURZMU5UUTNXaGdQTXpBeU1qQTNNVFV3TmpVMQpORGRhTUIweEN6QUpCZ05WQkFZVEFsVlRNUTR3REFZRFZRUUlEQVZYYjNKc1pEQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFLREZ0WTJmTENLTTRVVXZlSWUvZVVaQ0NodmtBdzFZR3Azd1Y2VW0KSkQ3T2cwRkwyM1JYdnEzVVhMWDhTTWQwMXpxQTFVbU1LMFNScXYxVkJTcHEzMkc0QkVBNDR4elpxclJBWUtURQo5aUxoMjN6MVI3ZWU5TlhkZFNCb01vcjFabFZyaVdtS213RzBrMC91Q3Frb1U0dnkvQmlpU1lSN09zUXNjdDcyClVZSE1mTS8zMUYyKzM4ZU1LUFBlNGowTTBaUmtsKzFaZjNlYnhlZTRMZkk5UTFpM1B6OFdTT2JvR0p3bkxNb2oKa29haE5TZ2xyTW9HUEoySXFrdTdLeHI3YVNwYit3NVZLYjAzd3pYVTNlMFpYZ3hoZ2cxa0JNdm50Q3FPV3VzSgpWM1hxaS9PV1E3N3RDUENxbUx6eXJkdStyTlVoTlpuNHR1T1FtT0FuYWxVZk55MENBd0VBQVRBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFtc1VPR2pOOG9JMTBvZnFXajE4dlRiRkNQMzdlajQwTVlLNWRmdkxuTUt5WVZRcEcKZytpMlB2R3lOYUJ1cUNFdkprWVFscXJTMC9pcUcwdzhIckJ6MDJYZHlTckRYemloSVQ0eVRZbXlaNDFJNUdZdQpISVhsWll2VkxZSDJJeGMrV1ZUUlc2aDdUYWd5VzBTYWkvY2NsYnc2ZVAwVGFMYncrUXVMOUxxbUJQTUpNR0RYCi9kMGdLZk50Tnk1b3Q5aE5sbFRndll2RXNVdnhqNFZralQ3TDZ5VytHb1hycnlTcHAxaGRBaVBRUWkvUjRrNHYKTnRxRkZGRVQwbDQ0YkhPanozSjhncis4WmJzY1QvanpBWmkxVFRzeVQ3eEZtNU0vSjlIby9CWGhLSjhmb2p3dwpoV0hvWXU5VTk4RFVLcWpsVXZzNS9SVzE5STJDaWdUL05jeFRVQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJRENDQWdpZ0F3SUJBZ0lKQUpRU1JFVnFMV3h2TUEwR0NTcUdTSWIzRFFFQkN3VUFNQjB4Q3pBSkJnTlYKQkFZVEFsVlRNUTR3REFZRFZRUUlEQVZYYjNKc1pEQWVGdzB5TXpBek1UUXdOalUzTkRCYUZ3MHlOREF6TVRNdwpOalUzTkRCYU1GNHhDekFKQmdOVkJBWVRBbFZUTVEwd0N3WURWUVFJREFST2IyNWxNUTB3Q3dZRFZRUUhEQVJPCmIyNWxNUkF3RGdZRFZRUUtEQWRWY0dKdmRXNWtNUkV3RHdZRFZRUUxEQWhRYkdGMFptOXliVEVNTUFvR0ExVUUKQXd3RFpYTnpNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhMb0FhUE1UTjljcQptTG9nWHg3TkF2MkVwMmNFZFhpdm1LTGFhM0xadFUrd0RBSnNOR3NTWjVpVHlocC9Dc1ZTUThEMUVGdjFRRjI1CkR5TG5YQU5VUmdyWHU4S3FMR1grRTNOZzM0RU0rTmsrQmhpcEp6N3k1dkZscHl0bUdsSXp4ZVBoWlBjVG0vWFEKenFIRkRUaUdaeTdsZGNVUHZJQ1VtUHo0Y2pSQS9MYnE2aldFVDNSWVRSaVArb3NqTDJzQmVjTmVsVW5zcUdwTgpBUlBMOEFPeTdyald2SjhwOFYwUks0bVQ4SW9qSDduK1c3cGY1SVNJRFF6aGg1Y1FVRnBKWXJIUWtaY0ErZTNECkhkemt4RzRtbE1XRkhTSkdFcGZNWER6U1Zta2I4U1RrbDk1b0FML1RSUVFtYXBqd21ZVkZDb0kyUVpYbFdkOHAKYnlHZ095eXN3UUlEQVFBQm95SXdJREFlQmdOVkhSRUVGekFWZ2hNcUxtTnliM056Y0d4aGJtVXRjM2x6ZEdWdApNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJTUGFTenZDY21lT3RHMDd6OUwrL2NtNDUyTis1S20wNktSY3AvClVONGZxTmRNeFJ4UUc0SUJySGp1MVRQQTZOZ0xBUzZNWWJmZExBZWNwTlFuZXVWa2ZLd3lyS1M0cXk0YW9TYzEKVllHY2g3ZXBrK2ppSDhKS1l5dGF3cm9GcGRIZUtXdHZFRFA5eXJpUk5qdnNxVS8yN1VFU2pDZ016bXptRy9ROQo3dVFBdVNXR1pWZnlSbEpFL3htSVE3QUlnRm02dWNLSXpKTUk4ODdXcWVXRVBaa3JJRWFWL3RVckkzTGdBK25TCm5ja0JqbWcvUmJiMHVwcC9nci9yZHQ2Um9jc3FYdm44bFoxSWR5a0hoVE5pUWtVTWdRMGtnN3d4Mnc4a2FMZ3UKZGEzc0NRY0w4c1dCdmM0SHB3c3dPcExJcy9zbU9Sb0JZZXlFUGRZaUVMNzQ1UlV3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRREV1Z0JvOHhNMzF5cVkKdWlCZkhzMEMvWVNuWndSMWVLK1lvdHByY3RtMVQ3QU1BbXcwYXhKbm1KUEtHbjhLeFZKRHdQVVFXL1ZBWGJrUApJdWRjQTFSR0N0ZTd3cW9zWmY0VGMyRGZnUXo0MlQ0R0dLa25QdkxtOFdXbksyWWFValBGNCtGazl4T2I5ZERPCm9jVU5PSVpuTHVWMXhRKzhnSlNZL1BoeU5FRDh0dXJxTllSUGRGaE5HSS82aXlNdmF3RjV3MTZWU2V5b2FrMEIKRTh2d0E3THV1TmE4bnlueFhSRXJpWlB3aWlNZnVmNWJ1bC9raElnTkRPR0hseEJRV2tsaXNkQ1Jsd0Q1N2NNZAozT1RFYmlhVXhZVWRJa1lTbDh4Y1BOSldhUnZ4Sk9TWDNtZ0F2OU5GQkNacW1QQ1poVVVLZ2paQmxlVlozeWx2CklhQTdMS3pCQWdNQkFBRUNnZ0VBY3Z4TTlRcnU5cnFiT1QzQlloZTh1THk1NXFiK0lqTnlYNE1BcThFcm95QjYKdytvK21Memt1d3loaFlYTEw5NTU0UVJOdVV3bW80S2tna1ppZUpPeGxHY09CYjhZZkc3NC9TRjVRK3BJVE1PZAp6eTVtNEh1WXVvZnFaTFduTGtkUjM1Nzh4V2p0VzBGbzFQNFZFVTh5citqblVkam5BOFVjRmZmMnQ3bjNLajR3ClNrV0t6bFhDUDVrRmNTR2hPOWE1dlVxem16K0JUYUc2Sk9Ybk80N2xXQlllZzRKSkpvT3lOWmZhTjBFY0ZpNHUKeEdlRUpGOWlNTVdnSmIwMXpqdEZYVUxSSVg3R0VjVjByRDZ6SVJyd29XVS8ycWdvNUpMWUJQSTJ1aGtYSHE3OQpWK2NwR1RxMjJzd0t3a0tFWEt4U1g1T3J1anZuQjRVUHZ1bUtyWVdBQVFLQmdRRDZwa2tSYno3YU45Vm5zbWxZClJkODBtM3dya3FydkZzbjN5Y3VOY1NkWHQwQStrNG9Hb1dDRnBrZkhrSWNJaGN4d1lBUkNSWGdvSEJtM1JJemcKd0h6Z1VFZU1JMzQxcVRhdE05QlgrK3VzSmdONmxrRHh3RW44Q1ByMnBOWDJNOWFyQWZSdlkvaHRNcER0L1pWUApOZm96d0s4Wjh2LzJFZlhqSzVpN1d0OGJBUUtCZ1FESTdRdWY0VkNITS9nU3d1czBCc2NsK3NqemJhSzNTRlZXClkxS3lESFc1eWM1akZoeGRWRUlMSzh3eEZMTHM1T1YyT2xSVzRkZDMyaDh6T0t3SjBlbW9ESm1EZ0p3R1p5ankKc2x0Y1FKM1hINzBaeHpYK012bkhCaHRhVHVUNnlGR0dzNlpwbEdaT29adWRsMnFJRU1vWVI0MVlMSlc5TnkwagppZnFGaDI1UndRS0JnRHdDMGgyOWY5UHBhRXZTbUl4TTlscjNHeXluaWd1Q2JrcklZdGJ6ajVMZHlpRHhYQ3VvCk9aN21KK3RzL0JlYlNVNWlmc0tMTlhDTkFjOHlOM1NjUVluSFRzb0x1VzBKblpDc2hpWjZwM3RwQW80NEtVWjQKWG41Y2ZCSFBkM2JpQkhTZkhESUxRbkNLbWM2UlYwMUd4Q2ZkNjA2UU1wNXN3RzFxZzcvZnl1a0JBb0dCQUsvTwp1bDBxeVV1RUxZdzlBWkNFWGJ6ZHN2ZE05eE5vTjBOZnBQd2w2dHlsdC9EN1o5WkI0NGZpeXNnblZHZno0Tk9TCk5qblBZcmw4SWRDdnhkalIwNkUzWlJ1cmJOb3RhYWJ5YVA1UGk4eXYrTWFWaUtqajhhb3pyYnRYVFFRaVF6T1oKL2dKajF5RDJSek9kU1puRkZ4QW5pNFdiZldvUzNXdzdUdm1IaHdBQkFvR0FYamUrSUgxYTNqdmMyd08zRUJVMgp4VW5CMGRPMVNqWHo0VkZFQktEdjc4MzlZb0Y3YXJVM2U1Z2tHZFZMcW92dk9rcExXNk13cDJhVzJzdzhEM3NZCmZjaEZ6NUc2RTQrVngwek8zMTdDTFFIb2wrOFhRdExtajJzRXBCR2pLNGtvV0tmMHJMT2FMWHZ4VlcrSzZDRVQKTWpOZGNZRmtINTNqWk05TUN6dDR6R3c9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
EOF